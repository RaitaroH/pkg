#!/usr/bin/env sh

PKG_VERSION="0.2.0"

clean() {
    shift
    case "$PKG_MAN" in
        pacman) $SUDO pacman -Sc "$@" ;;
        xbps) $SUDO xbps-remove -O "$@" ;;
        apt|pkcon) $SUDO apt clean "$@" ;;
    esac
}

help() {
    printf "\
Usage:
    pkg [options] [target]

Example:
    pkg search package
    pkg info package
    pkg upgrade

Options:
    clean       clean up all local caches
    help        print this message
    info        see package info
    install     install a package
    list        show all packages in local repository
    remove      remove a package(s) by name
    search      search for a package in repositories
    upgrade     perform full system upgrade
    version     show version of this tool

Version:
    %s

Source:
    https://github.com/vednoc/pkg\n" $PKG_VERSION
}

info() {
    shift
    case "$PKG_MAN" in
        pacman) pacman -Qi "$@" ;;
        xbps) xbps-query "$@" ;;
        apt|pkcon) apt show "$@" ;;
    esac
}

install() {
    shift
    case "$PKG_MAN" in
        pacman) $SUDO pacman -S "$@" ;;
        xbps) $SUDO xbps-install -S "$@" ;;
        apt|pkcon) $SUDO apt install "$@" ;;
    esac
}

list() {
    shift
    case "$PKG_MAN" in
        pacman) pacman -Q "$@" ;;
        xbps) xbps-query -l "$@" ;;
        apt|pkcon) apt list "$@" ;;
    esac
}

remove() {
    shift
    case "$PKG_MAN" in
        pacman) $SUDO pacman -Rs "$@" ;;
        xbps) $SUDO xbps-remove -R "$@" ;;
        apt) $SUDO apt remove "$@" ;;
        pkcon) $SUDO pkcon remove "$@" ;;
    esac
}

search() {
    shift
    case "$PKG_MAN" in
        pacman) pacman -Ss "$@" ;;
        xbps) xbps-query -Rs "$@" ;;
        apt|pkcon) apt search "$@" ;;
    esac
}

upgrade() {
    shift
    case "$PKG_MAN" in
        pacman) $SUDO pacman -Syu "$@" ;;
        xbps) $SUDO xbps-install -Su "$@" ;;
        apt) $SUDO apt update && apt upgrade "$@" ;;
        pkcon) $SUDO pkcon refresh && pkcon update "$@" ;;
    esac
}

version() {
    printf "pkg version %s\n" $PKG_VERSION
}

# Determine which package manager to use.
if command -v pacman >/dev/null; then
    PKG_MAN="pacman"
elif command -v xbps-install >/dev/null; then
    PKG_MAN="xbps"
elif command -v apt >/dev/null; then
    PKG_MAN="apt"
elif command -v pkcon >/dev/null; then
    PKG_MAN="pkcon"
else
    echo "Unsupported package manager." >&2
fi

# Determine which sudo-alike program to use.
# Found it in xi file in [1] and slightly modified it.
# [1]: https://github.com:leahneukirchen/xtools.
SUDO=
if command -v sudo >/dev/null; then
    SUDO=sudo
elif command -v doas >/dev/null && [ -f /etc/doas.conf ]; then
    SUDO=doas
elif [ "$(whoami)" != root ]; then
    SUDO='su root -c '\''"$@"'\'' -- -'
fi

# Exit and print help if no arguments are passed.
if [ $# -lt 1 ]; then
    help
    exit 0
fi

case "$1" in
    clean)
        clean "$@"
        ;;

    h|help)
        help
        ;;

    info)
        info "$@"
        ;;

    i|install)
        install "$@"
        ;;

    ls|list)
        list "$@"
        ;;

	rm|remove)
        remove "$@"
        ;;

    s|search)
        search "$@"
        ;;

    u|upgrade)
        upgrade "$@"
        ;;

    -v|--version|version)
        version
        ;;

    *)
        printf "Unknown option: %s\n\n" "$*"
        help
        ;;
esac
